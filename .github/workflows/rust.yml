name: Rust

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-channel: ['stable', 'nightly']
        rust-target: [
            'armv7-linux-androideabi',
            'aarch64-linux-android',
            'i686-linux-android',
            'x86_64-linux-android',
        ]

    steps:
    - uses: actions/checkout@v1

    - name: Download NDK
      run: |
        curl -LO https://dl.google.com/android/repository/android-ndk-r20-linux-x86_64.zip
        unzip android-ndk-r20-linux-x86_64.zip -d $GITHUB_WORKSPACE

    - name: Installing Rust ${{ matrix.rust-channel }} w/ ${{ matrix.rust-target }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-channel }}
        target: ${{ matrix.rust-target }}
        override: true

    - name: Check formating
      run: cargo fmt --all -- --check

    - name: Run tests
      run: |
        cd ndk-sys && cargo test --features test && cd ..
        cd ndk && cargo test --features rustdoc --doc && cd ..
        cargo test -p ndk-build
        cargo test -p cargo-apk

    - name: Install cargo-apk
      run:
        cargo install --path cargo-apk

    - name: Check compiling on target ${{ matrix.rust-target }}
      run: |
        export NDK_HOME="$GITHUB_WORKSPACE/android-ndk-r20"
        export CC="$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/clang"
        export AR="$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
        cargo check -p ndk --target ${{ matrix.rust-target }}
        cargo apk build -p ndk-examples --target ${{ matrix.rust-target }} --examples
